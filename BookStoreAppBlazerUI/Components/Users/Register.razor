@page "/users/register"
@inject IClient httpClient
@inject NavigationManager navManager

<h3>Register New Account</h3>

@if (string.IsNullOrEmpty(message) == false)
{
   <div>
      <p>@message</p>
   </div>    
}
<!---->
<div class="card-body">
    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration" FormName="registration_form">
        <DataAnnotationsValidator />
        <ValidationSummary/>
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
            <ValidationMessage For="@(()=> RegistrationModel.Email)"/>
        </div>
        <div class="form-group">
            <label for="firstname">First Name</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
            <ValidationMessage For="@(()=> RegistrationModel.FirstName)" />
        </div>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
            <ValidationMessage For="@(()=> RegistrationModel.LastName)" />
        </div>
        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
            <ValidationMessage For="@(()=> RegistrationModel.Password)" />
        </div>
        <br>
        <button type="submit" class="btn btn-primary btn-block">Submit</button>
    </EditForm>
</div>

@code {
    UserDTO RegistrationModel = new UserDTO
    {
        Role="User"
    };
    string message = string.Empty;

    private async Task HandleRegistration()
    {
        try
        {
            await httpClient.RegisterAsync(RegistrationModel);
            navManager.NavigateTo("/users/login");
        }
        catch (ApiException ex)
        {
            message = ex.Message;
        }
    }

    private void NavigateToLogin()
    {
        navManager.NavigateTo("/users/login");
    }
}
